"""
Django settings for warzone_general project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
from django.contrib.messages import constants as messages
from pathlib import Path
import os

import django_on_heroku, dj_database_url

SERVER = os.getenv('SERVER')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '2m05(*m&n!wald@k^-v*au43ervkw740%^yubp&+4(*+1ii(fw'

# SECURITY WARNING: don't run with debug turned on in production!

if 'SERVER' in os.environ:
    DEBUG = False
    ALLOWED_HOSTS = ['wz-comp-dev.herokuapp.com','wz-comp.herokuapp.com']
    # SSL
    SECURE_SSL_REDIRECT = True
else:
    DEBUG = True
    ALLOWED_HOSTS = ['127.0.0.1', 'localhost', '*']

# Application definition

CUSTOM_APPS = [
    'core',
    'authentication',
]

LIBRARY_APPS = [
    'crispy_forms',
    'background_task',
    'rest_framework',
    'silk',
    'google_translate',
]

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # DJANGO ALL_AUTH
    'django.contrib.sites',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.twitch',
    'allauth.socialaccount.providers.facebook',

] + LIBRARY_APPS + CUSTOM_APPS

# DJANGO ALL_AUTH
SITE_ID = 2 # This is the id of the site on the admin, usually id = 1 but i deleted it

# https://dev.to/gajesh/the-complete-django-allauth-guide-la3

ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 7 # Email will expire in 7 days
ACCOUNT_EMAIL_REQUIRED = True # Email needs to be verified
ACCOUNT_EMAIL_VERIFICATION = "mandatory" # Block user from loggin in before verifying account
ACCOUNT_LOGIN_ATTEMPTS_LIMIT = 5
ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT = 86400 # 1 day in seconds

LOGIN_REDIRECT_URL = '/'
ACCOUNT_LOGOUT_REDIRECT_URL = '/accounts/login/'
ACCOUNT_DEFAULT_HTTP_PROTOCOL='https'

# Here you can overwrite sign up forms
ACCOUNT_FORMS = {
    'signup': 'authentication.forms.CustomSignupForm',
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # Whitenoise
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware', # Language translation
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # silky profile
    'silk.middleware.SilkyMiddleware',
]

ROOT_URLCONF = 'warzone_general.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [str(BASE_DIR.joinpath('templates'))],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'warzone_general.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

if 'SERVER' in os.environ:
    DATABASES['default'] = dj_database_url.config()

DATA_UPLOAD_MAX_NUMBER_FIELDS = None

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'EST'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

MEDIA_URL = '/images/'

#STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Authentication from django all_auth

AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
]

MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}

CRISPY_TEMPLATE_PACK = 'bootstrap4'

headers = {
    'x-rapidapi-key': "3628dda23fmsh59cfdd705e7a068p1cf126jsn8e295d3619a6",
    'x-rapidapi-host': "call-of-duty-modern-warfare.p.rapidapi.com"
}

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {"console": {"class": "logging.StreamHandler"}},
    "loggers": {
        "": {"handlers": ["console"], "level": "INFO"},
        "django": {"handlers": ["console"], "level": "INFO"},
    },
}

django_on_heroku.settings(locals(), logging = False)

# DJANGO BACKGROUND TASKS
MAX_ATTEMPTS = 4

# SENGRID EMAIL
EMAIL_HOST = 'smtp.sendgrid.net'
EMAIL_HOST_USER = 'apikey' # this is exactly the value 'apikey'
EMAIL_HOST_PASSWORD = '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'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

DEFAULT_FROM_EMAIL = 'dueloutesports@gmail.com' #https://stackoverflow.com/questions/61853146/django-sendgrid-allauth

# DJANGO REST FRAMEWORK
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ]
}

# SILKY PROFILER
SILKY_AUTHENTICATION = True  # User must login
SILKY_AUTHORISATION = True  # User must have permissions

SILKY_META = True